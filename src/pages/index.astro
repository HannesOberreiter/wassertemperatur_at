---
import DefaultLayout from "../layouts/DefaultLayout.astro";
import { STATES, tableData, timeoutWrapper, type Waters } from "../fetchData";
const filter = Object.values(STATES);
const lakes = (await timeoutWrapper(tableData)) as Waters[];
---

<DefaultLayout title="Wassertemperatur">
  <div class="container mx-auto py-8" x-data="filterLakes()">
    <!-- Filter Section -->
    <div class="flex flex-col md:flex-row justify-around mb-4">
      <div class="mb-4 md:mb-0">
        <label for="search" class="font-semibold mr-1">Suche:</label>
        <input
          id="search"
          class="border rounded p-2 text-black"
          type="text"
          placeholder="Suche..."
          x-model="searchFilter"
          @keyup="count = 0"
          @keyup.enter="saveQuery()"
        />
      </div>
      <div>
        <label for="filter" class="font-semibold mr-1">Bundesland:</label>
        <select
          id="filter"
          class="border rounded p-2 text-black"
          x-model="selectedFilter"
          x-on:change="count = 0"
        >
          <option value="">Alle Bundesländer</option>
          {filter.map((state) => <option value={state}>{state}</option>)}
        </select>
      </div>
    </div>
    <div class="overflow-x-auto">
      <table class="min-w-full border-collapse sm:border border-gray-300">
        <thead>
          <tr>
            <th class="p-2 text-left">Gewässer</th>
            <th class="p-2">Datum</th>
            <th class="p-2">Temperatur</th>
            <th class="p-2">Sichttiefe</th>
            <th class="p-2">Qualität</th>
          </tr>
        </thead>
        <tbody>
          {
            lakes.map((lake) => (
              <tr
                class="dark:hover:bg-gray-600 hover:bg-gray-100"
                class:list={[
                  {
                    "text-gray-500": !lake.RECENT,
                  },
                ]}
                x-show={`filter("${lake.BUNDESLAND}", "${lake.NAME}")`}
              >
                {lake.AGES ? (
                  <td class="p-2">
                    <a href={`/see/${lake.NAME.split(",")[0]}`}>{lake.NAME}</a>
                  </td>
                ) : (
                  <td class="p-2">{lake.NAME}</td>
                )}
                <td class="p-2 text-center" style="white-space:nowrap">
                  {lake.DATUM}
                </td>
                <td class="p-2 text-right">
                  {lake.TEMPERATUR ? lake.TEMPERATUR + "°C" : ""}
                </td>
                <td class="p-2 text-right">
                  {lake.SICHTTIEFE ? lake.SICHTTIEFE + "m" : ""}
                </td>
                <td class="p-2 text-center">
                  {lake.QUALITÄT ? lake.QUALITÄT : ""}
                </td>
              </tr>
            ))
          }
        </tbody>
        <tfoot>
          Ergebnisse: <span x-text="count"></span>
        </tfoot>
      </table>
    </div>
    <i>
      <b>Qualität:</b> 1 Ausgezeichnete Badegewässerqualität, 2 Gute Badegewässerqualität,
      3 Mangelhafte Badegewässerqualität, 4 Baden verboten / vom Baden wird abgeraten
    </i>
  </div>
</DefaultLayout>

<script is:inline>
  const url = new URL(window.location.href);
  const search = url.searchParams.get("search");
  const filter = url.searchParams.get("filter");

  const searchEl = document.getElementById("search");
  const filterEl = document.getElementById("filter");
  searchEl.value = search ?? "";
  filterEl.value = filter ?? "";

  function saveQuery() {
    const url = new URL(window.location.href);
    url.searchParams.set("search", this.searchFilter);
    url.searchParams.set("filter", this.selectedFilter);
    window.history.replaceState({}, "", url);
  }

  function filterLakes() {
    return {
      selectedFilter: filterEl.value,
      searchFilter: searchEl.value,
      count: 0,
      filter(state, name) {
        const select =
          this.selectedFilter === "" || this.selectedFilter === state;
        const search =
          this.searchFilter === "" ||
          name.toLowerCase().includes(this.searchFilter.toLowerCase());
        const result = select && search;
        if (result) this.count++;
        return result;
      },
      saveQuery,
    };
  }
</script>
